import "./globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { QueryClient, QueryCache } from "@tanstack/react-query";
import ReactQueryProvider from "@/src/providers/react-query-provider";
import { Toaster } from "@/src/components/ui/toaster";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const queryClient = new QueryClient({
  queryCache: new QueryCache({
    // @todo: this could be useful - https://tkdodo.eu/blog/breaking-react-querys-api-on-purpose#defining-on-demand-messages
    // onError: (error, query) => {
    //   if (query.meta.errorMessage) {
    //     toast.error(query.meta.errorMessage)
    //   }
    // },
  }),
});

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en" className="h-full bg-background">
      <body
        className={`${inter.className} ${
          process.env.NODE_ENV === "development" ? "debug-screens" : ""
        } h-full`}
      >
        <ReactQueryProvider>
          {/** todo: Dark mode doesn't work well with TailwindUI. Either make TailwindUI components work with shadcn or migrate to shadcn entirely */}
          {/* <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          > */}
          {children}
          {/* </ThemeProvider> */}
        </ReactQueryProvider>
        <Toaster />
      </body>
    </html>
  );
}
